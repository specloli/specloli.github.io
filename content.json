[{"title":"编译android源码","date":"2017-03-07T13:50:41.000Z","path":"2017/03/07/android_compile_log/","text":"编译AOSP源码参考android open source project 文档 https://source.android.com/ 1.环境搭建建议使用官方推荐的ubuntu 16.04。其他linux发行版也没啥大的问题，但是需要自己解决下依赖的问题。具体安装方法自行google。我的screenfetch如下：123456789101112131415161718 ./+o+- eng@g750 yyyyy- -yyyyyy+ OS: Ubuntu 16.04 xenial ://+//////-yyyyyyo Kernel: x86_64 Linux 4.4.0-64-generic .++ .:/++++++/-.+sss/` Uptime: 3h 10m .:++o: /++++++++/:--:/- Packages: 2065 o:+o+:++.`..```.-/oo+++++/ Shell: bash 4.3.46 .:+o:+o/. `+sssoo+/ Resolution: 1920x1080 .++/+:+oo+o:` /sssooo. DE: Unity 7.4.0/+++//+:`oo+o /::--:. WM: Compiz\\+/+o+++`o++o ++////. WM Theme: Flatabulous .++.o+++oo+:` /dddhhh. GTK Theme: Flatabulous [GTK2/3] .+.o+oo:. `oddhhhh+ Icon Theme: Papirus-Dark \\+.++o+o``-````.:ohdhhhhh+ Font: Ubuntu 11 `:o+++ `ohhhhhhhhyo++os: CPU: Intel Core i7-4700HQ CPU @ 3.4GHz .o:`.syhhhhhhh/.oo++o` GPU: GeForce GTX 860M /osyyyyyyo++ooo+++/ RAM: 2601MiB / 11898MiB ````` +oo+++o\\: `oo++. 解决依赖 12345678910111213141516171819202122232425262728293031323334//更新系统sudo apt-get update &amp;&amp; sudo apt-get dist-upgrade//安装openjdksudo apt-get install openjdk-8-jdk//安装shadowsocks-qt5 (安装之后配置代理)sudo add-apt-repository ppa:hzwhuang/ss-qt5sudo apt-get updatesudo apt-get install shadowsocks-qt5//安装并配置proxychainssudo apt-get install proxychainssudo gedit /etc/proxychains.conf修改代理为socks5 127.0.0.1 1080 //1080改为你自己的端口//安装依赖环境sudo apt-get install git-core gnupg flex bison gperf build-essential \\ zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \\ lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache \\ libgl1-mesa-dev libxml2-utils xsltproc unzip//配置usb访问权限wget -S -O - http://source.android.com/source/51-android.rules | sed &quot;s/&lt;username&gt;/$USER/&quot; | sudo tee &gt;/dev/null /etc/udev/rules.d/51-android.rules; sudo udevadm control --reload-rules//安装repomkdir ~/binPATH=~/bin:$PATHproxychains curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repochmod a+x ~/bin/repo//创建源码下载文件夹mkdir 你的路径 配置环境变量 Ubuntu的个人环境变量目录为~/.bashrc 1gedit ~/.bashrc 在文件末尾添加以下内容并修改为自己的路径 12345678#repo pathexport PATH=/home/你的用户名/bin:$PATH#android compile pathexport OUT_DIR_COMMON_BASE=你的路径export USE_CCACHE=1export JACK_SERVER_VM_ARGUMENTS=&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m&quot;export CCACHE_DIR=你的路径/.ccache 添加完成之后，使其立即生效1source ~/.bashrc 下载源码 repo是基于git开发的版本管理工具，如果你没配置过git,需要先执行 12git config --global user.name &quot;Your Name&quot;git config --global user.email &quot;you@example.com&quot; 如果你想在实体机器上面安装 到这里寻找对应机型的branch1https://source.android.com/source/build-numbers.html#source-code-tags-and-builds 如果没有branch ，进入你的路径并初始化repo12cd 你的路径proxychains repo init -u https://android.googlesource.com/platform/manifest 如果带有branch 12cd 你的路径proxychains repo init -u https://android.googlesource.com/platform/manifest -b 你的branch 最后是同步，时间较长,断了重新运行 多线程自己计算，公式：cpu线程数x(1~2)，我的是4核8线程，就是8～16 ，不过太多线程容易断1proxychains repo sync -j8 编译源码 先clean一下源码：1make clobber 配置初始化环境1source build/envsetup.sh 选择输出版本1lunch 我这里是nexus 6,根据官网文档 选择带有userdebug的版本 如果你要刷入硬件，需要添加相应的驱动，下载以后放在源码目录，并执行shell文件1https://developers.google.com/android/drivers 最后一步，编译,线程选多点，时间视电脑配置而定，一个小时到几个小时不等1make -j16 编译完成后不要关闭终端，启动模拟器1emulator 如果模拟器运行较慢1sudo apt-get install qemu-kvm 刷入手机 如果没配置android sdk环境变量，先配置一下1gedit ~/.bashrc 添加以下路径123#android sdk tools pathexport PATH=/你的sdk路径/tools:$PATHexport PATH=/你的sdk路径/platform-tools:$PATH 添加完成后，使其生效1source ~/.bashrc 编译完成后刷机文件在你的输出路径下的 /target/product/你的版本 下，连接手机123456adb reboot bootloader //进入bootloaderfastboot flash boot boot.imgfastboot flash system system.imgfastboot flash userdata userdata.imgfastboot flash cache cache.imgfastboot reboot","tags":[{"name":"android","slug":"android","permalink":"http://specloli.github.io/tags/android/"}]},{"title":"This is my blog.","date":"2017-02-20T16:14:25.000Z","path":"2017/02/21/hello-world/","text":"Welcome to benjamin’s blog 1234567891011121314151617181920212223 /* wake up, Neo... the matrix has you follow the white rabbit. knock, knock, Neo. (`. ,-, ` `. ,;' / `. ,'/ .' `. X /.' .-;--''--.._` ` ( .' / ` , ` ' Q ' , , `._ \\ ,.| ' `-.;_' : . ` ; ` ` --,.._; ' ` , ) .' `._ , ' /_ ; ,''-,;' ``- ``-..__``--`**/ 2017一直想开个blog。奈何在自建服务器与第三方之间徘徊，最后选择了git-pages的方案，大方简洁而且容易维护。其实这个blog在2016年就搭建完成，种种原因荒芜了一年。（ps,就是懒） 2017年，希望自己能勇敢坚持下去，跟着心中那只不安的兔子。","tags":[]}]